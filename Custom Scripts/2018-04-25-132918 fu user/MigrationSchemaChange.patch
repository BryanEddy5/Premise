diff --git a/Stored Procedures/dbo.usp_CutSheet_Email_Reminder.sql b/Stored Procedures/dbo.usp_CutSheet_Email_Reminder.sql
index 159f388..d466da2 100644
--- a/Stored Procedures/dbo.usp_CutSheet_Email_Reminder.sql
+++ b/Stored Procedures/dbo.usp_CutSheet_Email_Reminder.sql
@@ -8,9 +8,10 @@
 -- Author:		Bryan Eddy
 -- ALTER date:	2/15/2017
 -- Description:	Send out emails to notify approvers of constructions awaiting for approval.
-	Version:	2
+	Version:	3
 	Update:		1. Added in a date differential to give more time before notification
 				2. Put results into a table with differential of days the request has been open.
+				3. Created a group for this alert as group 17
 -- =============================================
 */
 CREATE PROCEDURE [dbo].[usp_CutSheet_Email_Reminder]
@@ -39,7 +40,9 @@
 
 SET @ReceipientList = (STUFF((SELECT ';' + UserEmail FROM tblConfiguratorUser I
 						INNER JOIN Users.UserResponsibility K ON K.UserID = I.UserID
-						 WHERE k.ResponsibilityID IN (2,3) FOR XML PATH('')),1,1,''))
+						 WHERE k.ResponsibilityID = (17) FOR XML PATH('')),1,1,''))
+
+						PRINT @Receipientlist
 
 SELECT @numRows = COUNT(*) FROM #Results
 
diff --git a/Tables/dbo.Buff#1_#2 Alloc Table.sql b/Tables/dbo.Buff#1_#2 Alloc Table.sql
index 0518e63..7a236b4 100644
--- a/Tables/dbo.Buff#1_#2 Alloc Table.sql
+++ b/Tables/dbo.Buff#1_#2 Alloc Table.sql
@@ -29,7 +29,8 @@
 [ID] [int] NOT NULL IDENTITY(1, 1),
 [TimeStamp] [timestamp] NULL,
 [PrimaryBufferingLine] [int] NULL,
-[B18_Line_Speed] [decimal] (18, 3) NULL
+[B18_Line_Speed] [decimal] (18, 3) NULL,
+[B2_Second_Pass] [decimal] (18, 3) NULL
 ) ON [PRIMARY]
 GO
 ALTER TABLE [dbo].[Buff#1/#2 Alloc Table] ADD CONSTRAINT [Buff#1/#2 Alloc Table$PrimaryKey] PRIMARY KEY CLUSTERED  ([PrefixID]) ON [PRIMARY]
diff --git a/Views/dbo.vBurnListingLengthRequirement.sql b/Views/dbo.vBurnListingLengthRequirement.sql
index fd1704b..0fbed6f 100644
--- a/Views/dbo.vBurnListingLengthRequirement.sql
+++ b/Views/dbo.vBurnListingLengthRequirement.sql
@@ -2,6 +2,7 @@
 GO
 SET ANSI_NULLS ON
 GO
+
 /*
 Author:		Bryan Eddy
 Date:		2/28/2018
@@ -35,15 +36,15 @@
 	INNER JOIN tblCableConstructions ON tblCableConstructionReferences.BaseID = tblCableConstructions.BaseID
 	INNER JOIN tblBurnListing ON dbo.CableUnion.Base = tblBurnListing.base AND CableUnion.ListingCompany = tblBurnListing.ListingCompany
 	INNER JOIN dbo.AFLPRD_INVSysItemCost_CAB B ON dbo.CableUnion.Oracle = B.ItemNumber
-	WHERE tblBurnListing.ListingCompany IN ('etl', 'ul') AND B.Item_Status <> 'obsolete'
+	WHERE tblBurnListing.ListingCompany IN ('etl', 'ul') --AND B.Item_Status <> 'obsolete'
 	AND NominalOD <>0 AND tblCableConstructionReferences.Active = 1 AND ReleasedDesign = 1
 	--WHERE -- AND K.AvailQty <> 0 AND K.Locator NOT like 'wop%'
 )
 ,cteBurnCalculation
 AS(
-SELECT 	 round([NominalOD]*0.03936996,4)AS NomODInches
+SELECT 	 ROUND([NominalOD]*0.03936996,4)AS NomODInches
 	, CAST(CEILING((12/(BurnNominalOD*0.03936996))*16.5*1.1/3.281) AS INT) AS BurnLength_M_OFNR
-	, CAST(CEILING((6990/BurnNominalOD)*1.1/3) AS int) AS BurnLength_M_OFNP
+	, CAST(CEILING((6990/BurnNominalOD)*1.1/3) AS INT) AS BurnLength_M_OFNP
 	,E.Length_Meters AS VerticalTrayTestLength_M
 	,CEILING(((4/(BurnNominalOD*0.03936996))+0.33)*3.281) AS BurnLength_M_LS
 	,g.*
@@ -57,6 +58,7 @@
 		,e.*
 		--,g.Locator, g.AvailQty, g.ItemDesc, g.LotNumber
 FROM cteBurnCalculation  e --INNER JOIN dbo.AFLPRD_acswopattn_CAB_SNF g ON g.Item = e.Oracle
+WHERE e.Oracle ='PS05720-01'
 
 
 
diff --git a/Views/dbo.vCutSheet_Constructions_DELETE.sql b/Views/dbo.vCutSheet_Constructions_DELETE.sql
deleted file mode 100644
index 9182efa..0000000
--- a/Views/dbo.vCutSheet_Constructions_DELETE.sql
+++ /dev/null
@@ -1,49 +0,0 @@
-SET QUOTED_IDENTIFIER ON
-GO
-SET ANSI_NULLS ON
-GO
-
-CREATE VIEW [dbo].[vCutSheet_Constructions_DELETE]
-as
-
-SELECT DISTINCT 
-                          tblCableConstructionReferences.base, 
-						  tblCableConstructionReferences.FamilyID,
-                         tblCableConstructionReferences.DesignCode, 
-						 tblBOM_Base_Weight.Weight AS Weight_kg_per_m, 
-						 tblDesignTypes.SalesForceDescription, 
-                         tblDesignTypeGroups.DesignTypeGroupDesc, 
-						 tblDesignCodeJacket.Jacket, 
-						 tblCableConstructionReferences.TBType, 
-                         tblCableConstructions.NominalOD, 
-						 tblCableConstructionReferences.NumSubFillers, 
-						 tblCableConstructionReferences.NumSubPositions, 
-						 NULL FurcationTube, 
-                         NULL Furcation, tblCableConstructions.CablePasses, 
-						 cast(substring(tblCableConstructionReferences.DesignCode, 3,3) as int) FiberCount
-						 ,CASE WHEN tblCableConstructionReferences.TBType = 'Ribbon' THEN substring(tblCableConstructionReferences.DesignCode, 6,2) 
-						 ELSE (substring(tblCableConstructionReferences.DesignCode, 6,1) + '.' + substring(tblCableConstructionReferences.DesignCode, 7,1))+' mm'  END UnitOD
-						 , tblCableConstructionReferences.BaseID, dbo.tblCableConstructionReferences.DesignTypeID
-FROM            tbl_Fibers INNER JOIN
-                         tblDesignCodeFiberElementValue ON tbl_Fibers.Fiber_Type = tblDesignCodeFiberElementValue.FiberLetter INNER JOIN
-                         tblFiberTBCatalog ON tbl_Fibers.TBCatalogType = tblFiberTBCatalog.TBCatalogType INNER JOIN
-                         tblFiberTBIndicators ON tblFiberTBCatalog.TBCatalogType = tblFiberTBIndicators.TBCatalogType INNER JOIN
-                         tblBOM_Base_Weight INNER JOIN
-                         tblCableTBType INNER JOIN
-                         tblCableConstructionReferences INNER JOIN
-                         tblCableTightBufferReference ON tblCableConstructionReferences.TBType = tblCableTightBufferReference.TBType INNER JOIN
-                         tblCableConstructions ON tblCableConstructionReferences.BaseID = tblCableConstructions.BaseID ON 
-                         tblCableTBType.TBIndicatorID = tblCableTightBufferReference.TBIndicatorID ON tblBOM_Base_Weight.BASE = tblCableConstructionReferences.Base INNER JOIN
-                         tblDesignTypes ON tblCableConstructionReferences.DesignTypeID = tblDesignTypes.DesignTypeID INNER JOIN
-                         tblDesignTypeGroups ON tblDesignTypes.DesignTypeGroupID = tblDesignTypeGroups.DesignTypeGroupID INNER JOIN
-                         tblDesignCodeJacket ON tblCableConstructionReferences.CableFamily = tblDesignCodeJacket.CableLetter AND 
-                         tblCableConstructionReferences.CableLevel1 = tblDesignCodeJacket.JacketLetter ON tblFiberTBIndicators.TBLetter = tblCableTBType.TBLetter
-WHERE        (tblCableConstructionReferences.Active = 1) AND (tblCableConstructionReferences.ReleasedDesign = 1) AND (tblDesignCodeFiberElementValue.Active = 1) AND 
-                         (tblDesignCodeFiberElementValue.FiberLetter NOT LIKE '%@%') AND (tblCableConstructionReferences.DesignTypeID IS NOT NULL) AND (tblDesignTypes.Active = 1) 
-                         AND (tblDesignTypeGroups.Active = 1) AND (tblCableConstructionReferences.TBType <> 'Furcation') AND (tblCableConstructionReferences.ApprovedForQuoting = 1) 
-                         AND (tbl_Fibers.Active = 1) --AND (tblCableConstructionReferences.Base = 'RQ072-4.5')
-						 
---ORDER BY SalesForceDescription, base
-
-
-GO
